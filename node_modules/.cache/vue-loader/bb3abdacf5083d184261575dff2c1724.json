{"remainingRequest":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\vue-agile\\src\\Agile.vue?vue&type=style&index=0&id=107516b9&prod&lang=css&","dependencies":[{"path":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\vue-agile\\src\\Agile.vue","mtime":1696225612466},{"path":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696225608846},{"path":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1696225611421},{"path":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\postcss-loader\\src\\index.js","mtime":1696225609734},{"path":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696225607987},{"path":"C:\\Users\\andy\\Documents\\GitHub\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":1696225610618}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hZ2lsZSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgouYWdpbGUtLXNzciAuYWdpbGVfX3NsaWRlcy0tY2xvbmVkIHsKICBkaXNwbGF5OiBub25lCn0KCi5hZ2lsZS0tc3NyIC5hZ2lsZV9fc2xpZGVzID4gKiB7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB3aWR0aDogMAp9CgouYWdpbGUtLXNzciAuYWdpbGVfX3NsaWRlcyA+ICo6Zmlyc3QtY2hpbGQgewogIHdpZHRoOiAxMDAlCn0KCi5hZ2lsZS0tcnRsIC5hZ2lsZV9fdHJhY2ssCi5hZ2lsZS0tcnRsIC5hZ2lsZV9fc2xpZGVzLAouYWdpbGUtLXJ0bCAuYWdpbGVfX2FjdGlvbnMsCi5hZ2lsZS0tcnRsIC5hZ2lsZV9fZG90cyB7CiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlOwp9CgouYWdpbGU6Zm9jdXMsIC5hZ2lsZTphY3RpdmUsIC5hZ2lsZSAqOmZvY3VzLCAuYWdpbGUgKjphY3RpdmUgewogIG91dGxpbmU6IG5vbmU7Cn0KCi5hZ2lsZV9fbGlzdCB7CiAgZGlzcGxheTogYmxvY2s7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgd2lkdGg6IDEwMCU7Cn0KCi5hZ2lsZV9fdHJhY2sgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKICBmbGV4LXdyYXA6IG5vd3JhcDsKfQoKLmFnaWxlX19hY3Rpb25zIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQoKLmFnaWxlLS1uby1uYXYtYnV0dG9ucyAuYWdpbGVfX2FjdGlvbnMgewogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9CgouYWdpbGVfX3NsaWRlcyB7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgZmxleC1ncm93OiAxOwogIGZsZXgtc2hyaW5rOiB1bnNldDsKICBmbGV4LXdyYXA6IG5vd3JhcDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7Cn0KCi5hZ2lsZS0tZGlzYWJsZWQgLmFnaWxlX19zbGlkZXMgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDAlOwp9CgouYWdpbGVfX3NsaWRlIHsKICBkaXNwbGF5OiBibG9jazsKICBmbGV4LWdyb3c6IDE7CiAgZmxleC1zaHJpbms6IDA7Cn0KCi5hZ2lsZV9fc2xpZGUsCi5hZ2lsZV9fc2xpZGUgKiB7CiAgLXdlYmtpdC11c2VyLWRyYWc6IG5vbmU7Cn0KCi5hZ2lsZS0tZmFkZSAuYWdpbGVfX3NsaWRlIHsKICBvcGFjaXR5OiAwOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiAwOwp9CgouYWdpbGUtLWZhZGUgLmFnaWxlX19zbGlkZS0tYWN0aXZlIHsKICBvcGFjaXR5OiAxOwogIHotaW5kZXg6IDI7Cn0KCi5hZ2lsZS0tZmFkZSAuYWdpbGVfX3NsaWRlLS1leHBpcmluZyB7CiAgb3BhY2l0eTogMTsKICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwczsKICB6LWluZGV4OiAxOwp9CgouYWdpbGVfX25hdi1idXR0b25bZGlzYWJsZWRdIHsKICBjdXJzb3I6IGRlZmF1bHQ7Cn0KCi5hZ2lsZV9fZG90cyB7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgcGFkZGluZzogMDsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwp9CgouYWdpbGVfX2RvdCBidXR0b24gewogIGN1cnNvcjogcG9pbnRlcjsKICBkaXNwbGF5OiBibG9jazsKICBmb250LXNpemU6IDA7CiAgbGluZS1oZWlnaHQ6IDA7Cn0K"},{"version":3,"sources":["Agile.vue"],"names":[],"mappings":";AAsbA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Agile.vue","sourceRoot":"node_modules/vue-agile/src","sourcesContent":["<template>\n  <div\n    :class=\"{'agile--ssr': isSSR, 'agile--auto-play': settings.autoplay, 'agile--disabled': settings.unagile, 'agile--fade': settings.fade && !settings.unagile, 'agile--rtl': settings.rtl, 'agile--no-nav-buttons': !settings.navButtons}\"\n    class=\"agile\"\n    @touchstart=\"() => {}\"\n  >\n    <div\n      ref=\"list\"\n      class=\"agile__list\"\n    >\n      <div\n        ref=\"track\"\n        :style=\"{transform: `translate(${translateX + marginX}px)`, transition: `transform ${settings.timing} ${transitionDelay}ms`}\"\n        class=\"agile__track\"\n        @mouseout=\"handleMouseOut('track')\"\n        @mouseover=\"handleMouseOver('track')\"\n      >\n        <div\n          v-show=\"slidesCloned\"\n          ref=\"slidesClonedBefore\"\n          class=\"agile__slides agile__slides--cloned\"\n        >\n          <slot/>\n        </div>\n\n        <div\n          ref=\"slides\"\n          class=\"agile__slides agile__slides--regular\"\n        >\n          <slot/>\n        </div>\n\n        <div\n          v-show=\"slidesCloned\"\n          ref=\"slidesClonedAfter\"\n          class=\"agile__slides agile__slides--cloned\"\n        >\n          <slot/>\n        </div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"$slots.caption\"\n      class=\"agile__caption\"\n    >\n      <slot name=\"caption\"/>\n    </div>\n\n    <div\n      v-if=\"!settings.unagile && (settings.navButtons || settings.dots)\"\n      class=\"agile__actions\"\n    >\n      <button\n        v-if=\"settings.navButtons && !settings.unagile\"\n        ref=\"prevButton\"\n        :disabled=\"!canGoToPrev\"\n        aria-label=\"Previous\"\n        class=\"agile__nav-button agile__nav-button--prev\"\n        type=\"button\"\n        @click=\"goToPrev(), restartAutoPlay()\"\n      >\n        <slot name=\"prevButton\">\n          ←\n        </slot>\n      </button>\n\n      <ul\n        v-if=\"settings.dots && !settings.unagile\"\n        ref=\"dots\"\n        class=\"agile__dots\"\n      >\n        <li\n          v-for=\"n in countSlides\"\n          :key=\"n\"\n          :class=\"{'agile__dot--current': n - 1 === currentSlide}\"\n          class=\"agile__dot\"\n          @mouseout=\"handleMouseOut('dot')\"\n          @mouseover=\"handleMouseOver('dot')\"\n        >\n          <button\n            type=\"button\"\n            @click=\"goTo(n - 1), restartAutoPlay()\"\n          >\n            {{ n }}\n          </button>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"settings.navButtons && !settings.unagile\"\n        ref=\"nextButton\"\n        :disabled=\"!canGoToNext\"\n        aria-label=\"Next\"\n        class=\"agile__nav-button agile__nav-button--next\"\n        type=\"button\"\n        @click=\"goToNext(), restartAutoPlay()\"\n      >\n        <slot name=\"nextButton\">\n          →\n        </slot>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n  import handlers from './mixins/handlers'\n  import helpers from './mixins/helpers'\n  import methods from './mixins/methods'\n  import preparations from './mixins/preparations'\n  import settings from './mixins/settings'\n  import throttle from './mixins/throttle'\n  import watchers from './mixins/watchers'\n\n  export default {\n    name: 'agile',\n\n    mixins: [handlers, helpers, methods, preparations, settings, throttle, watchers],\n\n    emits: ['before-change', 'after-change', 'breakpoint'],\n\n    data () {\n      return {\n        autoplayInterval: null,\n        autoplayRemaining: null,\n        autoplayStartTimestamp: null,\n        autoplayTimeout: null,\n        currentSlide: null,\n        dragDistance: 0,\n        dragStartX: 0,\n        dragStartY: 0,\n        isAutoplayPaused: false,\n        isMouseDown: false,\n        slides: [],\n        slidesClonedAfter: [],\n        slidesClonedBefore: [],\n        isSSR: (typeof window === 'undefined'),\n        transitionDelay: 0,\n        translateX: 0,\n        widthWindow: 0,\n        widthContainer: 0\n      }\n    },\n\n    computed: {\n      breakpoints: function () {\n        return (!this.initialSettings.responsive) ? [] : this.initialSettings.responsive.map(item => item.breakpoint)\n      },\n\n      canGoToPrev: function () {\n        return (this.settings.infinite || this.currentSlide > 0)\n      },\n\n      canGoToNext: function () {\n        return (this.settings.infinite || this.currentSlide < this.countSlides - 1)\n      },\n\n      countSlides: function () {\n        return (this.isSSR) ? this.htmlCollectionToArray(this.$slots.default).length : this.slides.length\n      },\n\n      countSlidesAll: function () {\n        return this.slidesAll.length\n      },\n\n      currentBreakpoint: function () {\n        const breakpoints = this.breakpoints.map(item => item).reverse()\n        return (this.initialSettings.mobileFirst) ? breakpoints.find(item => item < this.widthWindow) || 0 : breakpoints.find(item => item > this.widthWindow) || null\n      },\n\n      marginX: function () {\n        if (this.settings.unagile) {\n          return 0\n        }\n\n        let marginX = (this.slidesCloned) ? this.countSlides * this.widthSlide : 0\n\n        // Center mode margin\n        if (this.settings.centerMode) {\n          marginX -= (Math.floor(this.settings.slidesToShow / 2) - +(this.settings.slidesToShow % 2 === 0)) * this.widthSlide\n        }\n\n        return (this.settings.rtl) ? marginX : -1 * marginX\n      },\n\n      slidesCloned: function () {\n        return (!this.settings.unagile && !this.settings.fade && this.settings.infinite)\n      },\n\n      slidesAll: function () {\n        return (this.slidesCloned) ? [...this.slidesClonedBefore, ...this.slides, ...this.slidesClonedAfter] : this.slides\n      },\n\n      widthSlide: function () {\n        return (!this.settings.unagile) ? this.widthContainer / this.settings.slidesToShow : 'auto'\n      }\n    },\n\n    mounted () {\n      // Windows resize listener\n      window.addEventListener('resize', this.getWidth)\n\n      // Mouse and touch events\n      this.$refs.track.addEventListener('touchstart', this.handleMouseDown)\n      this.$refs.track.addEventListener('touchend', this.handleMouseUp)\n      this.$refs.track.addEventListener('touchmove', this.handleMouseMove)\n      this.$refs.track.addEventListener('mousedown', this.handleMouseDown)\n      this.$refs.track.addEventListener('mouseup', this.handleMouseUp)\n      this.$refs.track.addEventListener('mousemove', this.handleMouseMove)\n\n      // Init\n      this.isSSR = false\n      this.reload()\n    },\n\n    // Vue 3\n    beforeUnmount () {\n      this.destroy()\n    },\n\n    methods: {\n      destroy () {\n        window.removeEventListener('resize', this.getWidth)\n\n        this.$refs.track.removeEventListener('touchstart', this.handleMouseDown)\n        this.$refs.track.removeEventListener('touchend', this.handleMouseUp)\n        this.$refs.track.removeEventListener('touchmove', this.handleMouseMove)\n        this.$refs.track.removeEventListener('mousedown', this.handleMouseDown)\n        this.$refs.track.removeEventListener('mouseup', this.handleMouseUp)\n        this.$refs.track.removeEventListener('mousemove', this.handleMouseMove)\n\n        this.disableAutoPlay()\n      },\n\n      // Return current breakpoint\n      getCurrentBreakpoint () {\n        return this.currentBreakpoint\n      },\n\n      // Return settings for current breakpoint\n      getCurrentSettings () {\n        return this.settings\n      },\n\n      // Return current slide index\n      getCurrentSlide () {\n        return this.currentSlide\n      },\n\n      // Return initial settings\n      getInitialSettings () {\n        return this.initialSettings\n      },\n\n      // Go to slide\n      goTo (n, transition = true, asNav = false) {\n        // Break goTo() if unagile is active\n        if (this.settings.unagile) {\n          return false\n        }\n\n        if (!asNav) {\n          this.settings.asNavFor.forEach(carousel => {\n            if (carousel) {\n              carousel.goTo(n, transition, true)\n            }\n          })\n        }\n\n        let slideNextReal = n\n\n        if (transition) {\n          if (this.settings.infinite && n < 0) {\n            slideNextReal = this.countSlides - 1\n          } else if (n >= this.countSlides) {\n            slideNextReal = 0\n          }\n\n          this.$emit('before-change', { currentSlide: this.currentSlide, nextSlide: slideNextReal })\n\n          this.currentSlide = slideNextReal\n\n          if (n !== slideNextReal) {\n            setTimeout(() => {\n              this.goTo(slideNextReal, false)\n            }, this.settings.speed)\n          }\n        }\n\n        const translateX = (!this.settings.fade) ? n * this.widthSlide * this.settings.slidesToScroll : 0\n        this.transitionDelay = (transition) ? this.speed : 0\n\n        if (this.infinite || (this.currentSlide + this.slidesToShow <= this.countSlides)) {\n          this.translateX = (this.settings.rtl) ? translateX : -1 * translateX\n        }\n      },\n\n      // Go to next slide\n      goToNext () {\n        if (this.canGoToNext) {\n          this.goTo(this.currentSlide + 1)\n        }\n      },\n\n      // Go to previous slide\n      goToPrev () {\n        if (this.canGoToPrev) {\n          this.goTo(this.currentSlide - 1)\n        }\n      },\n\n      // Reload carousel\n      reload () {\n        this.getWidth()\n        this.prepareSlides()\n        this.prepareCarousel()\n        this.toggleFade()\n        this.toggleAutoPlay()\n      }\n    }\n  }\n</script>\n\n<style>\n  .agile {\n    position: relative;\n  }\n\n  .agile--ssr .agile__slides--cloned {\n    display: none\n  }\n\n  .agile--ssr .agile__slides > * {\n    overflow: hidden;\n    width: 0\n  }\n\n  .agile--ssr .agile__slides > *:first-child {\n    width: 100%\n  }\n\n  .agile--rtl .agile__track,\n  .agile--rtl .agile__slides,\n  .agile--rtl .agile__actions,\n  .agile--rtl .agile__dots {\n    flex-direction: row-reverse;\n  }\n\n  .agile:focus, .agile:active, .agile *:focus, .agile *:active {\n    outline: none;\n  }\n\n  .agile__list {\n    display: block;\n    overflow: hidden;\n    position: relative;\n    width: 100%;\n  }\n\n  .agile__track {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n  }\n\n  .agile__actions {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .agile--no-nav-buttons .agile__actions {\n    justify-content: center;\n  }\n\n  .agile__slides {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    flex-shrink: unset;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n\n  .agile--disabled .agile__slides {\n    display: block;\n    width: 100%;\n  }\n\n  .agile__slide {\n    display: block;\n    flex-grow: 1;\n    flex-shrink: 0;\n  }\n\n  .agile__slide,\n  .agile__slide * {\n    -webkit-user-drag: none;\n  }\n\n  .agile--fade .agile__slide {\n    opacity: 0;\n    position: relative;\n    z-index: 0;\n  }\n\n  .agile--fade .agile__slide--active {\n    opacity: 1;\n    z-index: 2;\n  }\n\n  .agile--fade .agile__slide--expiring {\n    opacity: 1;\n    transition-duration: 0s;\n    z-index: 1;\n  }\n\n  .agile__nav-button[disabled] {\n    cursor: default;\n  }\n\n  .agile__dots {\n    align-items: center;\n    display: flex;\n    list-style: none;\n    padding: 0;\n    white-space: nowrap;\n  }\n\n  .agile__dot button {\n    cursor: pointer;\n    display: block;\n    font-size: 0;\n    line-height: 0;\n  }\n</style>\n"]}]}